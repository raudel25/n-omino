@using InteractionGui
@using Rules
@typeparam T1
@typeparam T2

@if (Cant != 0)
{
    <div class="Select">
        <div class="HeadSelect">
            <label>@VariantGui!.Description</label>
        </div>

        <div style="display: flex">
            <EditForm Model="VariantGui">
                <InputSelect @bind-Value="_selcted" class="InputSelect">
                    @foreach (var item in VariantGui.Param)
                    {
                        <option value="@item.Index">@item.Name</option>
                    }
                </InputSelect>
            </EditForm>
            @if (Cant == 1)
            {
                <button @onclick="Next" class="ButtonSelect">Terminar</button>
            }
            else
            {
                <button @onclick="Next" class="ButtonSelect">Siguiente</button>
            }
        </div>

        <div>
            @if (_selcted != -1)
            {
                @if (VariantGui.Param[_selcted].ValueForParam)
                {
                    @if (DefaultValue is int)
                    {
                        <input type="number" @bind="_valueInt"/>
                    }
                    @if (DefaultValue is char || DefaultValue is string)
                    {
                        <input @bind="_valueString"/>
                    }
                }
                @if (VariantGui.Param[_selcted].Cant)
                {
                    <input type="number" @bind="_cantParam"/>
                }
                @if (VariantGui.Param[_selcted].Comparison)
                {
                    
                }
            }
        </div>

        <div style="display: flex; justify-content: center;">
            @if (_selcted != -1)
            {
                <p>Descripcion: @VariantGui.Param[_selcted].Description</p>
            }
        </div>
    </div>
}


@code {

    [Parameter]
    public List<T1>? ValueParam { get; set; }

    [Parameter]
    public int Cant { get; set; } = 1;
    
    [Parameter]
    public IVariant<T1, T2>? VariantGui { get; set; }

    private int _selcted = -1;

    private int _valueInt = 1;

    private string _valueString = "";

    private int _cantParam = 1;

    private void Next()
    {
        if (_selcted != -1)
        {
            ParamSelectFunction<T2> param = new ParamSelectFunction<T2>(); 
            
            if (DefaultValue is int)
            {
                ParamSelectFunction<int> paramInt=(param as ParamSelectFunction<int>)!;
                paramInt.ValueForParam = _valueInt;
            }

            if (DefaultValue is char)
            {
                ParamSelectFunction<char> paramChar=(param as ParamSelectFunction<char>)!;
                if(_valueString.Length==0) return;
                paramChar.ValueForParam = _valueString[0];
            }

            if (DefaultValue is string)
            {
                ParamSelectFunction<string> paramString=(param as ParamSelectFunction<string>)!;
                paramString.ValueForParam = _valueString;
            }
            
            paramInt.Cant = _cantParam;
            
            ValueParam!.Add(VariantGui!.Values[_selcted](param));
            Cant--;
        }
    }

}