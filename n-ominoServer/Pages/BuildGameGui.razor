@using Game
@using InteractionGui
@typeparam T

@if (!_select)
{
    <div style="display: flex; justify-content: center;">
        <h3>Cree un juego</h3>
    </div>

    <div style="display: flex; justify-content: center;">
        <SelectInitializerGameGui DefaultValue="DefaultValue!" Initializer="_initializer" Printers="_printers" Rules="_rules"></SelectInitializerGameGui>
    </div>

    if (_initializer.Count == 1)
    {
        <SelectRules Rules="_rules" DefaultValue="DefaultValue!"></SelectRules>
    }

    <div style="height: 10px;">
    </div>

    if (DefaultValue is int)
    {
        <div style="display: flex; justify-content: center">
            <div class="PreCreated">
                <div style="display: flex; justify-content: center;">
                    <h7>Seleccione un juego pre creado</h7>
                </div>
                <div style="display: flex; justify-content: center;">
                    <EditForm Model="_gamesCreated">
                        <InputSelect @bind-Value="_selectGame" class="InputSelectPreGame">
                            @foreach (var item in _gamesCreated.NameGames)
                            {
                                <option value="@item.Item2">@item.Item1</option>
                            }
                        </InputSelect>
                    </EditForm>
                </div>
            </div>
        </div>

        <div style="height: 10px;">
        </div>
    }

    <div style="display: flex; justify-content: center;">
        <button class="Create" @onclick="CreateGame">Crear Juego</button>
    </div>
}

@code {

    [Parameter]
    public List<BuildGame<T>>? Game { get; set; }

    [Parameter]
    public T? DefaultValue { get; set; }

    private List<InitializerGame<T>> _initializer = new();

    private BuildRules<T> _rules = new();

    private List<Printer> _printers = new();

    private bool _select;

    private int _selectGame = -1;

    private SelectGamesCreated _gamesCreated = new();

    private void CreateGame()
    {
        if (_initializer.Count == 1 && _rules.IsReady)
        {
            Game!.Add(new BuildGame<T>(_initializer[0], _rules.Build(), _printers[0]));
            _select = true;
        }
        else
        {
            if (!(DefaultValue is int)) return;
            if (_selectGame != -1)
            {
                Game!.Add((_gamesCreated.Build[_selectGame] as BuildGame<T>)!);
                _select = true;
            }
        }
    }

}