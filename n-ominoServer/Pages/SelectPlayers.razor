@using Rules
@using Player
@using InteractionGui
@typeparam T 

@if (_cantPlayers == -1)
{
    <div class="SelectRule">
        <div class="HeadSelect">
            <h5>Selecciona la cantidad de jugadores</h5>
        </div>

        <div style="display: flex; justify-content: center;">
            @if (!_selectValue)
            {
                <div style="width: 150px;">
                    <label>Cantidad de jugadores</label>
                </div>

                <input type="number" @bind="_cantPlayersValue" class="InputSelectHead"/>

                <button @onclick="() => { _cantPlayers = _cantPlayersValue; }" class="ButtonSelectHeadT">Seleccionar</button>
            }
        </div>
    </div>
}

@if (_cantPlayers > 0)
{
    <div class="SelectRule">
        <div class="HeadSelect">
            <h5>Seleccionar el jugador</h5>
        </div>


        @if (!_selectValue)
        {
            <div style="display: flex; justify-content: center;">
                <label>Introduzca el nombre </label>
                <div style="width: 30px;"></div>
                <input style="width: 100px; background-color: wheat; outline: none; border: 0;" @bind="_name"/>
            </div>

            <div style="display: flex; justify-content: center;">
                <label>Introduzca el equipo </label>
                <div style="width: 30px;"></div>
                <input style="width: 100px; background-color: wheat; outline: none; border: 0;" type="number" @bind="_team"/>
            </div>

            <div style="height: 10px"></div>

            <div style="display: flex; justify-content: center;">
                <div style="width: 150px;">
                    <label>Cantidad de estrategias</label>
                </div>

                <input type="number" @bind="_cant" class="InputSelectHead"/>

                <button @onclick="Select" class="ButtonSelectHeadT">Seleccionar</button>
            </div>
        }


        @if (_selectValue)
        {
            <div style="display: flex; justify-content: center;">
                <SelectVariantGui Cant="_cant" ValueParam="_strategies" VariantGui="new SelectStrategies<T>()" Build="new BuildRules<T>()"></SelectVariantGui>
            </div>

            <div style="display: flex; justify-content: center;">
                <SelectVariantGui Cant="_cant" ValueParam="_valuesCondition" VariantGui="new SelectCondition<T>(DefaultValue!)" Build="new BuildRules<T>()"></SelectVariantGui>
            </div>
            <div style="display: flex; justify-content: center;">
                <SelectVariantGui Cant="_cant > 0 ? 1 : 0" ValueParam="_scoreMove" VariantGui="new SelectMoveScorer<T>()" Build="new BuildRules<T>()"></SelectVariantGui>
            </div>
            <div style="display: flex; justify-content: center;">
                <SelectVariantGui Cant="1" ValueParam="_defaultstrategy" VariantGui="new SelectDefaultStrategy<T>()" Build="new BuildRules<T>()"></SelectVariantGui>
            </div>
        }

        <div style="height: 10px"></div>

        <div style="display: flex; justify-content: center;">
            <button @onclick="CreateRule" class="ButtonSelectHeadB">Crear</button>
        </div>

        <div style="height: 5px"></div>
    </div>
}

@code {

    [Parameter]
    public List<Player<T>>? Players { get; set; }

    [Parameter]
    public T? DefaultValue { get; set; }

    [Parameter]
    public List<(int, int,string)>? Teams { get; set; }

    private int _cantPlayers = -1;

    private int _cant = 0;

    private int _team = 0;

    private string _name = "";

    private bool _selectValue = false;

    private List<IStrategy<T>> _strategies = new List<IStrategy<T>>();
        
    private List<IStrategy<T>> _defaultstrategy = new List<IStrategy<T>>();

    private List<ICondition<T>> _valuesCondition = new List<ICondition<T>>();

    private List<Scorer<T>.MoveScorer> _scoreMove = new();

    private int _cantPlayersValue = 4;

    private void Select()
    {
        _selectValue = true;
    }

    private void CreateRule()
    {
        if (_cant < 0) return;

        if (_strategies.Count == _cant && _valuesCondition.Count == _cant)
        {
            Players!.Add(new Player<T>(_strategies, _valuesCondition, _defaultstrategy[0], Players.Count, _scoreMove.Count is 0? Scorer<T>.RandomScorer : _scoreMove[0]));
            Teams!.Add((_team, Players.Count - 1,_name));

            _cant = 0;
            _strategies = new();
            _defaultstrategy = new();
            _valuesCondition = new();
            _scoreMove = new();
            _cantPlayers--;
            _selectValue = false;
            _team = 0;
            _name = "";
        }
    }

}